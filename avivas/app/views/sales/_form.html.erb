<%= form_with(model: sale, class: "form") do |form| %>
  <% if sale.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(sale.errors.count, "error") %> impidieron guardar la venta:</h2>

      <ul>
        <% sale.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="form-group">
    <h3>Productos</h3>
    <div id="products-container">
      <%= form.fields_for :product_sales do |product_sale_form| %>
        <div class="product-item">
          <%= product_sale_form.hidden_field :id %>
          
          <%= product_sale_form.label :product_id, "Producto" %>
          <%= product_sale_form.collection_select :product_id, @products || [], :id, :name, { prompt: "Seleccione un producto" }, { class: "product-select" } %>
          
          <%= product_sale_form.label :quantity, "Cantidad" %>
          <%= product_sale_form.number_field :quantity, min: 1 %>
          
          <%= product_sale_form.hidden_field :price %>

          <%= product_sale_form.check_box :_destroy %>
          <%= product_sale_form.label :_destroy, "Eliminar este producto" %>

        </div>
      <% end %>
    </div>
    <button type="button" id="add-product-button">Agregar Producto</button>
  </div>

  <div class="form-group">
    <%= form.label :client, class: "form-label" %>
    <%= form.text_field :client, class: "form-input" %>
  </div>

  <div class="form-actions">
    <%= form.submit class: "submit-button" %>
  </div>
<% end %>

<%= javascript_tag do %>
  document.addEventListener('turbo:load', function() {
  const productsContainer = document.getElementById('products-container');
  const addButton = document.getElementById('add-product-button');
  let productIndex = document.querySelectorAll('.product-item').length;

  addButton.addEventListener('click', function() {
    const newProduct = document.createElement('div');
    newProduct.className = 'product-item';
    newProduct.innerHTML = `
      <input type="hidden" name="sale[product_sales_attributes][${productIndex}][id]" value="" />
      
      <label for="sale_product_sales_attributes_${productIndex}_product_id">Producto</label>
      <select name="sale[product_sales_attributes][${productIndex}][product_id]" id="sale_product_sales_attributes_${productIndex}_product_id" class="product-select">
        <option value="">Seleccione un producto</option>
        ${Array.from(document.querySelector('.product-select').options)
          .map(opt => `<option value="${opt.value}">${opt.text}</option>`)
          .join('')}
      </select>
      
      <label for="sale_product_sales_attributes_${productIndex}_quantity">Cantidad</label>
      <input type="number" name="sale[product_sales_attributes][${productIndex}][quantity]" id="sale_product_sales_attributes_${productIndex}_quantity" min="0" value="1" />
      
      <input type="hidden" name="sale[product_sales_attributes][${productIndex}][price]" value="" />

      <input type="checkbox" name="sale[product_sales_attributes][${productIndex}][_destroy]" id="sale_product_sales_attributes_${productIndex}__destroy" value="1" />
      <label for="sale_product_sales_attributes_${productIndex}__destroy">Eliminar este producto</label>
    `;

    productsContainer.appendChild(newProduct);
    productIndex++;

    const newSelect = newProduct.querySelector('.product-select');
    setupProductSelect(newSelect);
  });

  function setupProductSelect(select) {
    select.addEventListener('change', function() {
      const selectedOption = this.options[this.selectedIndex];
      const priceField = this.closest('.product-item').querySelector('input[name$="[price]"]');
      if (selectedOption.value) {
        priceField.value = (parseFloat(selectedOption.value) * 10).toFixed(2); // Dummy price calculation
      } else {
        priceField.value = '';
      }
    });
  }

  document.querySelectorAll('.product-select').forEach(setupProductSelect);
});
<% end %>

